version: '3.8'

services:
  user-auth:
    build:
      context: ./user-auth
    ports:
      - "8001:8001"
    deploy:
      replicas: 1  
    depends_on:
      - db
    environment:
      PORT: 8001
      DATABASE.HOST: db
      DATABASE.PORT: 5432
      DATABASE.DBNAME: postgres
      DATABASE.USERNAME: username
      DATABASE.PASSWORD: password

  product-management:
    build:
      context: ./product
    ports:
      - "8002:8002"
    deploy:
      replicas: 1  
    depends_on:
      - db
    environment:
      PORT: 8002
      DATABASE.HOST: db
      DATABASE.PORT: 5432
      DATABASE.DBNAME: postgres
      DATABASE.USERNAME: username
      DATABASE.PASSWORD: password

  order-management:
    build:
      context: ./order-management
    ports:
      - "8003:8003"
    deploy:
      replicas: 1 
    depends_on:
      - db
    environment:
      PORT: 8003
      DATABASE.HOST: db
      DATABASE.PORT: 5432
      DATABASE.DBNAME: postgres
      DATABASE.USERNAME: username
      DATABASE.PASSWORD: password

  db:
    image: postgres:15.2
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    healthcheck:
      test: exit 0  # Update health check command if needed
      interval: 1s
      timeout: 1s
      retries: 3
    deploy:
      replicas: 1
    restart: always

  migrate:
    image: migrate/migrate:v4.15.2
    profiles: ["tools"]
    volumes:
      - ./migration:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://username:password@db:5432/postgres?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data: